{"ast":null,"code":"var _jsxFileName = \"/Users/spritevsion/Desktop/westcliff-bootcamp/lessons/M5-Week3/Day 2/Group Challenge/react-api/src/App.js\";\nimport React, { Component } from 'react';\nimport Contacts from './components/contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    this.state = {\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n      this.setState({\n        contacts: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Contacts, {\n      contacts: this.state.contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/spritevsion/Desktop/westcliff-bootcamp/lessons/M5-Week3/Day 2/Group Challenge/react-api/src/App.js"],"names":["React","Component","Contacts","App","constructor","state","contacts","componentDidMount","fetch","then","res","json","data","setState","catch","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACd,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAECC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACD,KAJD,EAKCE,KALD,CAKOC,OAAO,CAACC,GALf;AAMD;;AAEDC,EAAAA,MAAM,GAAI;AACR,wBACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AApByB;;AAuB5B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Contacts from './components/contacts';\n\nclass App extends Component {\n  constructor() {\n  this.state = {\n    contacts: []\n  }\n}\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ contacts: data })\n    })\n    .catch(console.log)\n  }\n\n  render () {\n    return (\n      <Contacts contacts={this.state.contacts} />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}